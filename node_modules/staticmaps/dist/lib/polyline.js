'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _lodash = require('lodash');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Polyline = function () {
  function Polyline() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    (0, _classCallCheck3.default)(this, Polyline);

    this.options = options;
    this.coords = this.options.coords;
    this.color = this.options.color || '#000000BB';
    this.fill = this.options.fill || '#000000BB';
    this.width = this.options.width || 3;
    this.simplify = this.options.simplify || false;
    this.type = _lodash._.isEqual(_lodash._.first(this.coords), _lodash._.last(this.coords)) ? 'polygon' : 'polyline';
  }

  /**
   * calculate the coordinates of the envelope / bounding box: (min_lon, min_lat, max_lon, max_lat)
   */


  (0, _createClass3.default)(Polyline, [{
    key: 'extent',
    value: function extent() {
      return [this.coords.map(function (c) {
        return c[0];
      }).min(), this.coords.map(function (c) {
        return c[1];
      }).min(), this.coords.map(function (c) {
        return c[0];
      }).max(), this.coords.map(function (c) {
        return c[1];
      }).max()];
    }
  }]);
  return Polyline;
}();

// Helper functions


exports.default = Polyline;
Array.prototype.max = function () {
  return Math.max.apply(null, this);
};
Array.prototype.min = function () {
  return Math.min.apply(null, this);
};